void fun(int n)
{
    int i = 1;
    while (i < n) {
        int j = n;
        while (j > 0) {
            j = j / 2;
        }
        i = i * 2;
    }
}
j = n
j = n/2
j = n/2/2
j = n/2/2/2 => n/2^k = 1 => 2^k = n => k = log(N)2
i = 1
i = 1*2
i = 1*2*2 = > 2^k = n => k = log(N)2
so the total time complexity is O(log(N)2)^2